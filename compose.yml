services:
  database:
    image: mysql:lts
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: amazoom
    ports:
      - "3306:3306"
    networks:
      - amazoom-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 40s

  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
    command: server /data
    networks:
      - amazoom-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/amazoom?allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_FLYWAY_URL: jdbc:mysql://database:3306/amazoom?allowPublicKeyRetrieval=true&useSSL=false
      SPRING_FLYWAY_USER: root
      SPRING_FLYWAY_PASSWORD: root
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    networks:
      - amazoom-network
    restart: on-failure

volumes:
  minio_data:

networks:
  amazoom-network:
    driver: bridge